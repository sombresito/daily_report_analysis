import os
import json
import shutil
from datetime import datetime
from pathlib import Path

BASE_DIR = Path("/data/vector_store")  # –ø—É—Ç—å –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —á–µ—Ä–µ–∑ ENV
MAX_REPORTS = 3


def sanitize_folder_name(name: str) -> str:
    # –£–¥–∞–ª–∏–º —Å–∏–º–≤–æ–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –ª–æ–º–∞—Ç—å —Ñ–∞–π–ª–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É
    return "".join(c for c in name if c.isalnum() or c in " _-()[]{}.").strip()


def extract_team_name(report_json: dict) -> str:
    try:
        return report_json["children"][0]["name"]
    except (KeyError, IndexError):
        raise ValueError("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –∏–∑ –æ—Ç—á—ë—Ç–∞")


def save_report(uuid: str, report_content: dict):
    team_name = extract_team_name(report_content)
    team_folder = BASE_DIR / sanitize_folder_name(team_name)
    team_folder.mkdir(parents=True, exist_ok=True)

    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    report_filename = f"report_{timestamp}.json"
    report_path = team_folder / report_filename

    with open(report_path, "w", encoding="utf-8") as f:
        json.dump(report_content, f, ensure_ascii=False, indent=2)

    print(f"‚úÖ –°–æ—Ö—Ä–∞–Ω—ë–Ω –æ—Ç—á—ë—Ç: {report_path}")

    clean_old_reports(team_folder)


def clean_old_reports(team_folder: Path):
    reports = sorted(team_folder.glob("report_*.json"), key=os.path.getctime, reverse=True)
    if len(reports) > MAX_REPORTS:
        for old_report in reports[MAX_REPORTS:]:
            try:
                old_report.unlink()
                print(f"üóëÔ∏è –£–¥–∞–ª—ë–Ω —Å—Ç–∞—Ä—ã–π –æ—Ç—á—ë—Ç: {old_report.name}")
            except Exception as e:
                print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å {old_report.name}: {e}")


# ===== –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è =====
if __name__ == "__main__":
    # –ü—Ä–∏–º–µ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç—á—ë—Ç–∞ –∏–∑ —Ñ–∞–π–ª–∞ (–≤ –±–æ–µ–≤–æ–º —Ä–µ–∂–∏–º–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç –∏–∑ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ UUID)
    example_path = "example_report.json"
    with open(example_path, encoding="utf-8") as f:
        report_json = json.load(f)

    save_report("dummy-uuid", report_json)
